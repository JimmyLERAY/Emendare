# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Amend {
  id: ID!
  created: DateTime!
  finished: DateTime!
  name: String!
  description: String!
  patch: String!
  version: Float!
  text: String!
  totalPotentialVotesCount: Float!
  closed: Boolean!
  accepted: Boolean!
  conflicted: Boolean!
  results: Results!
  arguments: [Argument!]!
  rules: Rules!
}

type AmendResponse {
  data: Amend
  error: Error
}

type Argument {
  id: ID!
  created: DateTime!
  text: String!
  type: String!
  upVotesCount: Float!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Error {
  message: String!
  code: Float!
}

type Mutation {
  postAmend(data: PostAmendInputs!): AmendResponse!
  postText(data: PostTextInputs!): TextResponse!
  unFollowText(id: String!): TextResponse!
  followText(id: String!): TextResponse!
}

input PostAmendInputs {
  name: String!
  description: String!
  patch: String!
  version: Float!
  textID: String!
}

input PostTextInputs {
  name: String!
  description: String!
}

type Query {
  amend(id: String!): AmendResponse!
  text(id: String!): TextResponse!
  texts: [String!]!
}

type Results {
  totalPotentialVotesCount: Float!
  upVotesCount: Float!
  downVotesCount: Float!
  indVotesCount: Float!
}

type Rules {
  delayMax: Float!
}

type Text {
  id: ID!
  created: DateTime!
  name: String!
  description: String!
  followersCount: Float!
  actual: String!
  patches: [String!]!
  amends: [String!]!
}

type TextResponse {
  data: Text
  error: Error
}
